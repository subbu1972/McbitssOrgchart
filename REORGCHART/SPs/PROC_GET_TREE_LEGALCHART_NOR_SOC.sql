USE [ORG_CHART_DEV]
GO
/****** Object:  StoredProcedure [dbo].[PROC_GET_TREE_LEGALCHART_NOR_SOC]    Script Date: 26/10/2018 08:19:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Subramanian.C>
-- =============================================
ALTER PROCEDURE [dbo].[PROC_GET_TREE_LEGALCHART_NOR_SOC] 
    @USERTYPE AS VARCHAR(50),
	@VERSION AS VARCHAR(50),
	@COMPANYNAME AS VARCHAR(500),
	@USERID AS VARCHAR(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @LEVEL TABLE(
		[LEVEL_ID] int,
		[LEVEL_NO] int,
		[BREAD_GRAM] VARCHAR(MAX)
	)
	DECLARE @NOR_COUNT TABLE(
		[MANAGER_ID] int,
		[NOR_COUNT] int
	)
	DECLARE @SOC_COUNT TABLE(
		[MANAGER_ID] int,
		[SOC_COUNT] int
	)

	DECLARE @SQLQUERY AS VARCHAR(MAX)
	DECLARE @COMPANYTB AS VARCHAR(500);
	SET @COMPANYTB = @COMPANYNAME + '_LEGALINFOS'

	IF (@USERTYPE='PLAYER' OR @USERTYPE='FINALYZER') SET @COMPANYNAME=@USERID;

	SET @SQLQUERY='WITH CTE AS (
					   SELECT 1 AS [LEVEL], [LEVEL_ID], CONVERT(VARCHAR(MAX), [LEVEL_ID]) AS [BREADGRAM], [PARENT_LEVEL_ID]
						  FROM '+@COMPANYTB+'
						  WHERE [PARENT_LEVEL_ID] =''999999'' AND USER_ID='''+@COMPANYNAME+''' AND VERSION='''+@VERSION+'''
					   UNION ALL 
					   SELECT cycle.[LEVEL] + 1, base.[LEVEL_ID], cycle.[BREADGRAM] + ''-->'' + base.[LEVEL_ID], base.[PARENT_LEVEL_ID]
						  FROM '+@COMPANYTB+' base
								INNER JOIN CTE cycle ON cycle.[LEVEL_ID] = base.[PARENT_LEVEL_ID] 
						  WHERE base.USER_ID='''+@COMPANYNAME+''' AND base.VERSION='''+@VERSION+''')
				   SELECT [LEVEL_ID], [Level], [BREADGRAM] FROM CTE'
	INSERT @LEVEL EXECUTE(@SQLQUERY)

	SET @SQLQUERY='WITH a AS (
						SELECT [LEVEL_ID] MANAGER_ID,[LEVEL_ID] 
						    FROM '+@COMPANYTB+' t
						    WHERE EXISTS (SELECT 1 FROM '+@COMPANYTB+' b 
							                 WHERE t.[LEVEL_ID] = b.[PARENT_LEVEL_ID] AND b.USER_ID='''+@COMPANYNAME+''' AND b.VERSION='''+@VERSION+''') 
								  AND t.USER_ID='''+@COMPANYNAME+''' AND t.VERSION='''+@VERSION+'''
						UNION ALL
						SELECT a.MANAGER_ID, t.[LEVEL_ID] 
							FROM '+@COMPANYTB+' t JOIN a ON t.[PARENT_LEVEL_ID] = a.[LEVEL_ID]
							WHERE t.USER_ID='''+@COMPANYNAME+''' AND t.VERSION='''+@VERSION+''')
				   --subtracting 1 because it is also counting the manager
				   SELECT MANAGER_ID, COUNT(*)-1 NOR_COUNT FROM a GROUP BY MANAGER_ID OPTION (MAXRECURSION 20)'
	INSERT INTO @NOR_COUNT EXECUTE(@SQLQUERY)

	SET @SQLQUERY='SELECT a.LEVEL_ID MANAGER_ID, COUNT(*) SOC_COUNT 
						FROM '+@COMPANYTB+' a, '+@COMPANYTB+' b 
						WHERE b.PARENT_LEVEL_ID = a.LEVEL_ID AND a.USER_ID='''+@COMPANYNAME+''' AND a.VERSION='''+@VERSION+''' AND 
						      a.USER_ID=b.USER_ID AND a.VERSION=b.VERSION
						GROUP BY a.LEVEL_ID
						HAVING COUNT(*) > 0'
	INSERT INTO @SOC_COUNT EXECUTE(@SQLQUERY)

	DELETE FROM UpdateNORSOC
	INSERT INTO UpdateNORSOC
	SELECT a.*, ISNULL(b.NOR_COUNT, 0) NOR_COUNT, ISNULL(C.SOC_COUNT, 0) SOC_COUNT 
		FROM @LEVEL a 
		LEFT JOIN @NOR_COUNT b ON a.LEVEL_ID=b.MANAGER_ID
		LEFT JOIN @SOC_COUNT c ON a.LEVEL_ID=c.MANAGER_ID

	SET @SQLQUERY='UPDATE '+@COMPANYTB+' 
						SET '+@COMPANYTB+'.LEVEL_NO = norsoc.LEVEL_NO,
						    '+@COMPANYTB+'.BREAD_GRAM = norsoc.BREAD_GRAM,
							'+@COMPANYTB+'.NOR_COUNT = norsoc.NOR_COUNT,
							'+@COMPANYTB+'.SOC_COUNT = norsoc.SOC_COUNT
				  FROM dbo.'+@COMPANYTB+' levelinfo INNER JOIN dbo.UpdateNORSOC norsoc ON levelinfo.LEVEL_ID = norsoc.LEVEL_ID
				  WHERE levelinfo.USER_ID='''+@COMPANYNAME+''' AND VERSION='''+@VERSION+''''

	EXECUTE(@SQLQUERY)
END

--EXEC PROC_GET_TREE_LEGALCHART_NOR_SOC 'Player', '2', 'MCBITSS', 'SUBBUCITTIBABU'
