USE [ORG_CHART_DEV]
GO
/****** Object:  StoredProcedure [dbo].[PROC_GET_POSITION_TREE_OPERATIONALCHART]    Script Date: 26/09/2019 21:07:17 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Subramanian.C>
-- =============================================
ALTER PROCEDURE [dbo].[PROC_GET_POSITION_TREE_OPERATIONALCHART] 
	@STARTPOSITION AS VARCHAR(50),
	@BREADGRAM AS VARCHAR(500),
	@DEPTH AS VARCHAR(50),
	@FINALYZER_VERSION AS VARCHAR(50),
	@VERSION AS VARCHAR(50),
	@USERTYPE AS VARCHAR(50),
	@COMPANYNAME AS VARCHAR(500),
	@USERID AS VARCHAR(50),
	@OPER AS VARCHAR(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @SQLQUERY AS NVARCHAR(MAX);
	DECLARE @LEVEL_NO AS NVARCHAR(50)='0'
	DECLARE @COMPANYTB AS VARCHAR(500);
	DECLARE @BREAD_GRAM AS VARCHAR(500);

	SET @COMPANYTB = @COMPANYNAME + '_' + @FINALYZER_VERSION + '_LEVELINFOS'
	IF (@OPER='LV') SET @COMPANYTB = @COMPANYNAME + '_' + @FINALYZER_VERSION + '_LEGALINFOS'

	IF (@USERTYPE='PLAYER' OR @USERTYPE='FINALYZER') SET @COMPANYNAME=@USERID;
	
	SET @SQLQUERY = 'SELECT TOP 1 @LEVEL_NO=[LEVEL_NO], @BREAD_GRAM=[BREAD_GRAM] FROM ['+@COMPANYTB+'] WHERE VERSION='''+@VERSION+''' AND LEVEL_ID='''+@STARTPOSITION+''' AND MFLAG=''XXX'';';
	PRINT @SQLQUERY
    EXEC sp_executesql @SQLQUERY, N'@LEVEL_NO NVARCHAR(1024) OUTPUT, @BREAD_GRAM NVARCHAR(1024) OUTPUT', @LEVEL_NO OUTPUT, @BREAD_GRAM OUTPUT;
	PRINT @LEVEL_NO 
	PRINT @BREAD_GRAM

	IF (@DEPTH='ONE')
	BEGIN
		SET @SQLQUERY = 'SELECT (CASE WHEN NODE_LOCATION = '''' THEN CAST(NODE_LOCATION_COL AS VARCHAR(50))+'' ''+CAST(NODE_LOCATION_ROW AS VARCHAR(50)) ELSE NODE_LOCATION END) [loc], LEVEL_ID [key], PARENT_LEVEL_ID [parent], ''#FFFFFF'' FILL_COLOR, CAST((CASE WHEN FLAG=''Y'' THEN 1 ELSE 0 END) AS BIT) [isAssistant], * 
			                FROM '+@COMPANYTB+' WHERE VERSION='''+@VERSION+''' AND BREAD_GRAM like ''%'+@BREADGRAM+'%''  AND (LEVEL_NO <= '+CAST((@LEVEL_NO+1) AS VARCHAR(5)) +' OR LEVEL_ID='+@STARTPOSITION+')
							ORDER BY SORTNO, PARENT_LEVEL_ID, LEVEL_ID ASC';
		PRINT @SQLQUERY
	END
	IF (@DEPTH='TWO')
	BEGIN
		SET @SQLQUERY = 'SELECT (CASE WHEN NODE_LOCATION = '''' THEN CAST(NODE_LOCATION_COL AS VARCHAR(50))+'' ''+CAST(NODE_LOCATION_ROW AS VARCHAR(50)) ELSE NODE_LOCATION END) [loc], LEVEL_ID [key], PARENT_LEVEL_ID [parent], ''#FFFFFF'' FILL_COLOR, CAST((CASE WHEN FLAG=''Y'' THEN 1 ELSE 0 END) AS BIT) [isAssistant], * 
			                FROM '+@COMPANYTB+' WHERE VERSION='''+@VERSION+''' AND BREAD_GRAM like ''%'+@BREADGRAM+'%''  AND (LEVEL_NO <= '+CAST((@LEVEL_NO+2) AS VARCHAR(5)) +' OR LEVEL_ID='+@STARTPOSITION+')
							ORDER BY SORTNO, PARENT_LEVEL_ID, LEVEL_ID ASC';
		PRINT @SQLQUERY
 	END
	IF (@DEPTH='THREE')
	BEGIN
		SET @SQLQUERY = 'SELECT (CASE WHEN NODE_LOCATION = '''' THEN CAST(NODE_LOCATION_COL AS VARCHAR(50))+'' ''+CAST(NODE_LOCATION_ROW AS VARCHAR(50)) ELSE NODE_LOCATION END) [loc], LEVEL_ID [key], PARENT_LEVEL_ID [parent], ''#FFFFFF'' FILL_COLOR, CAST((CASE WHEN FLAG=''Y'' THEN 1 ELSE 0 END) AS BIT) [isAssistant], * 
			                FROM '+@COMPANYTB+' WHERE VERSION='''+@VERSION+''' AND BREAD_GRAM like ''%'+@BREADGRAM+'%''  AND (LEVEL_NO <= '+CAST((@LEVEL_NO+3) AS VARCHAR(5)) +' OR LEVEL_ID='+@STARTPOSITION+')
							ORDER BY SORTNO, PARENT_LEVEL_ID, LEVEL_ID ASC';
		PRINT @SQLQUERY
 	END
	IF (@DEPTH='FOUR')
	BEGIN
		SET @SQLQUERY = 'SELECT (CASE WHEN NODE_LOCATION = '''' THEN CAST(NODE_LOCATION_COL AS VARCHAR(50))+'' ''+CAST(NODE_LOCATION_ROW AS VARCHAR(50)) ELSE NODE_LOCATION END) [loc], LEVEL_ID [key], PARENT_LEVEL_ID [parent], ''#FFFFFF'' FILL_COLOR, CAST((CASE WHEN FLAG=''Y'' THEN 1 ELSE 0 END) AS BIT) [isAssistant], * 
			                FROM '+@COMPANYTB+' WHERE VERSION='''+@VERSION+''' AND BREAD_GRAM like ''%'+@BREADGRAM+'%''  AND (LEVEL_NO <= '+CAST((@LEVEL_NO+4) AS VARCHAR(5)) +' OR LEVEL_ID='+@STARTPOSITION+')
							ORDER BY SORTNO, PARENT_LEVEL_ID, LEVEL_ID ASC';
		PRINT @SQLQUERY
 	END
	IF (@DEPTH='FIVE')
	BEGIN
		SET @SQLQUERY = 'SELECT (CASE WHEN NODE_LOCATION = '''' THEN CAST(NODE_LOCATION_COL AS VARCHAR(50))+'' ''+CAST(NODE_LOCATION_ROW AS VARCHAR(50)) ELSE NODE_LOCATION END) [loc], LEVEL_ID [key], PARENT_LEVEL_ID [parent], ''#FFFFFF'' FILL_COLOR, CAST((CASE WHEN FLAG=''Y'' THEN 1 ELSE 0 END) AS BIT) [isAssistant], * 
			                FROM '+@COMPANYTB+' WHERE VERSION='''+@VERSION+''' AND BREAD_GRAM like ''%'+@BREADGRAM+'%''  AND (LEVEL_NO <= '+CAST((@LEVEL_NO+5) AS VARCHAR(5)) +' OR LEVEL_ID='+@STARTPOSITION+')
							ORDER BY SORTNO, PARENT_LEVEL_ID, LEVEL_ID ASC';
		PRINT @SQLQUERY
 	END
	IF (@DEPTH='ALL')
	BEGIN
		SET @SQLQUERY = 'SELECT (CASE WHEN NODE_LOCATION = '''' THEN CAST(NODE_LOCATION_COL AS VARCHAR(50))+'' ''+CAST(NODE_LOCATION_ROW AS VARCHAR(50)) ELSE NODE_LOCATION END) [loc], LEVEL_ID [key], PARENT_LEVEL_ID [parent], ''#FFFFFF'' FILL_COLOR, CAST((CASE WHEN FLAG=''Y'' THEN 1 ELSE 0 END) AS BIT) [isAssistant], * 
			                FROM '+@COMPANYTB+' WHERE BREAD_GRAM like ''%'+@BREADGRAM+'%'' AND VERSION='''+@VERSION+''' 
							ORDER BY SORTNO, PARENT_LEVEL_ID, LEVEL_ID ASC';
	END
	EXEC(@SQLQUERY);

	SET @SQLQUERY = 'SELECT LEVEL_ID, PARENT_LEVEL_ID, FULL_NAME, NOR_COUNT 
					      FROM '+@COMPANYTB+' WHERE MFLAG=''XXX'' AND NOR_COUNT >= 1 AND VERSION='''+@VERSION+''' 
					      ORDER BY SORTNO, PARENT_LEVEL_ID, LEVEL_ID ASC';
	PRINT @SQLQUERY
	EXEC(@SQLQUERY);

END


--EXEC PROC_GET_POSITION_TREE_OPERATIONALCHART '10001337', '10001339-->10001337', 'Four', '18', '18', 'Finalyzer', 'UNHCR', 'AminAwad', 'OV'
--DECLARE @LEVEL_NO AS NVARCHAR(50)='0'
--SELECT TOP 1 @LEVEL_NO=[LEVEL_NO] FROM [Alcon_3_LEVELINFOS] WHERE VERSION='3' AND LEVEL_ID='10002291';
--PRINT @LEVEL_NO
--SELECT TOP 1 * FROM [Alcon_3_LEVELINFOS] WHERE VERSION='3' AND LEVEL_ID='10002291';